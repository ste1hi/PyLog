# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
  
jobs:
  build:

    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6","3.7","3.8", "3.9", "3.10"]
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      if: matrix.os == 'windows-latest'
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage
        if ( Test-Path -Path '.\requirements.txt' -PathType Leaf ){ pip install -r requirements.txt}
    - name: Install dependencies on ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    # - name: Install dependencies on macos
    #   if: matrix.os == 'macos-latest'
    #   run: |
    #     python -m pip install --upgrade pip
    #     python -m pip install flake8 pytest coverage
    #     if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


    - name: Lint with flake8 on Ubuntu
      if: matrix.os == 'ubuntu-latest'
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Lint with flake8 on Windows
      if: matrix.os == 'windows-latest'
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # - name: Lint with flake8 on Macos
    #   if: matrix.os == 'macos-latest'
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


    - name: Coverage report
      run: |
        coverage run --source pylog --parallel-mode -m unittest
        coverage combine
        coverage xml -i
      env:
        COVERAGE_RUN: True
    - name: Upload report to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
